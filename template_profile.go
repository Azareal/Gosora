/* This file was automatically generated by the software. Please don't edit it as your changes may be overwritten at any moment. */
package main
import "io"
import "strconv"

func init() {
	template_profile_handle = template_profile
	//o_template_profile_handle = template_profile
	ctemplates = append(ctemplates,"profile")
	tmpl_ptr_map["profile"] = &template_profile_handle
	tmpl_ptr_map["o_profile"] = template_profile
}

func template_profile(tmpl_profile_vars ProfilePage, w io.Writer) {
w.Write(header_0)
w.Write([]byte(tmpl_profile_vars.Title))
w.Write(header_1)
w.Write([]byte(tmpl_profile_vars.CurrentUser.Session))
w.Write(header_2)
w.Write(menu_0)
if tmpl_profile_vars.CurrentUser.Loggedin {
w.Write(menu_1)
w.Write([]byte(strconv.Itoa(tmpl_profile_vars.CurrentUser.ID)))
w.Write(menu_2)
if tmpl_profile_vars.CurrentUser.Is_Super_Mod {
w.Write(menu_3)
}
w.Write(menu_4)
w.Write([]byte(tmpl_profile_vars.CurrentUser.Session))
w.Write(menu_5)
} else {
w.Write(menu_6)
}
w.Write(menu_7)
w.Write(header_3)
if len(tmpl_profile_vars.NoticeList) != 0 {
for _, item := range tmpl_profile_vars.NoticeList {
w.Write(header_4)
w.Write([]byte(item))
w.Write(header_5)
}
}
w.Write(profile_0)
w.Write([]byte(tmpl_profile_vars.ProfileOwner.Avatar))
w.Write(profile_1)
w.Write([]byte(tmpl_profile_vars.ProfileOwner.Name))
w.Write(profile_2)
if tmpl_profile_vars.ProfileOwner.Tag != "" {
w.Write(profile_3)
w.Write([]byte(tmpl_profile_vars.ProfileOwner.Tag))
w.Write(profile_4)
}
w.Write(profile_5)
if tmpl_profile_vars.CurrentUser.Is_Super_Mod && !tmpl_profile_vars.ProfileOwner.Is_Super_Mod {
if tmpl_profile_vars.ProfileOwner.Is_Banned {
w.Write(profile_6)
w.Write([]byte(strconv.Itoa(tmpl_profile_vars.ProfileOwner.ID)))
w.Write(profile_7)
w.Write([]byte(tmpl_profile_vars.CurrentUser.Session))
w.Write(profile_8)
} else {
w.Write(profile_9)
w.Write([]byte(strconv.Itoa(tmpl_profile_vars.ProfileOwner.ID)))
w.Write(profile_10)
w.Write([]byte(tmpl_profile_vars.CurrentUser.Session))
w.Write(profile_11)
}
}
w.Write(profile_12)
w.Write([]byte(strconv.Itoa(tmpl_profile_vars.ProfileOwner.ID)))
w.Write(profile_13)
w.Write([]byte(tmpl_profile_vars.CurrentUser.Session))
w.Write(profile_14)
if len(tmpl_profile_vars.ItemList) != 0 {
for _, item := range tmpl_profile_vars.ItemList {
w.Write(profile_15)
if item.Avatar != "" {
w.Write(profile_16)
w.Write([]byte(item.Avatar))
w.Write(profile_17)
if item.ContentLines <= 5 {
w.Write(profile_18)
}
w.Write(profile_19)
w.Write([]byte(string(item.Css)))
}
w.Write(profile_20)
w.Write([]byte(string(item.ContentHtml)))
w.Write(profile_21)
w.Write([]byte(strconv.Itoa(item.CreatedBy)))
w.Write(profile_22)
w.Write([]byte(item.CreatedByName))
w.Write(profile_23)
if tmpl_profile_vars.CurrentUser.Is_Mod {
w.Write(profile_24)
w.Write([]byte(strconv.Itoa(item.ID)))
w.Write(profile_25)
w.Write([]byte(strconv.Itoa(item.ID)))
w.Write(profile_26)
}
w.Write(profile_27)
w.Write([]byte(strconv.Itoa(item.ID)))
w.Write(profile_28)
w.Write([]byte(tmpl_profile_vars.CurrentUser.Session))
w.Write(profile_29)
if item.Tag != "" {
w.Write(profile_30)
w.Write([]byte(item.Tag))
w.Write(profile_31)
}
w.Write(profile_32)
}
}
w.Write(profile_33)
if !tmpl_profile_vars.CurrentUser.Is_Banned {
w.Write(profile_34)
w.Write([]byte(strconv.Itoa(tmpl_profile_vars.ProfileOwner.ID)))
w.Write(profile_35)
}
w.Write(profile_36)
w.Write(footer_0)
}
